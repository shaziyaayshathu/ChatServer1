{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(authService, router, formBuilder) {\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      //controlname: ['initial value', rules]\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(4)]]\n    });\n  }\n  login() {\n    let auth = {\n      email: this.email,\n      password: this.password\n    };\n    this.authService.signIn(auth).subscribe(res => {\n      if (!res.status) alert(res.message);else {\n        this.authService.id = res.id;\n        this.authService.name = res.name;\n        // this.router.navigate(['/chat'])\n        alert(res.message);\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAGhD,SAAiCC,UAAU,QAAoB,gBAAgB;AAOxE,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAMzBC,YAAmBC,WAAuB,EAAUC,MAAc,EAACC,WAAwB;IAAxE,gBAAW,GAAXF,WAAW;IAAsB,WAAM,GAANC,MAAM;EAAqC;EAE/FE,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACzC;MACAC,IAAI,EAAE,CAAE,EAAE,EAAC,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACjCC,KAAK,EAAC,CAAC,EAAE,EAAC,CAACX,UAAU,CAACU,QAAQ,EAACV,UAAU,CAACY,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;MAChGC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,eAAe,EAAE,CAAC,EAAE,EAAE,CAACf,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,CAAC;KACrE,CAAC;EAEJ;EAEAE,KAAK;IACH,IAAIC,IAAI,GAAG;MACTN,KAAK,EAAC,IAAI,CAACA,KAAK;MAChBE,QAAQ,EAAE,IAAI,CAACA;KAChB;IACD,IAAI,CAACV,WAAW,CAACe,MAAM,CAACD,IAAI,CAAC,CAACE,SAAS,CAAEC,GAAO,IAAG;MACjD,IAAI,CAACA,GAAG,CAACC,MAAM,EAAEC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC,MAC/B;QACF,IAAI,CAACpB,WAAW,CAACqB,EAAE,GAAGJ,GAAG,CAACI,EAAE;QAC5B,IAAI,CAACrB,WAAW,CAACM,IAAI,GAACW,GAAG,CAACX,IAAI;QAC/B;QACAa,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;;IAErB,CAAC,CAAC;EACJ;CAED;AAnCYtB,cAAc,eAL1BF,SAAS,CAAC;EACT0B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW1B,cAAc,CAmC1B;SAnCYA,cAAc","names":["Component","Validators","LoginComponent","constructor","authService","router","formBuilder","ngOnInit","registerForm","group","name","required","email","pattern","password","minLength","confirmPassword","login","auth","signIn","subscribe","res","status","alert","message","id","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\ChatServer\\Frontend\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators,FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // email :string=\"\";\n  // password :string=\"\";\n  loginForm:FormGroup |any\n\n  constructor(public authService:AuthService, private router: Router,formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      //controlname: ['initial value', rules]\n      name: [ '',[Validators.required]],\n      email:['',[Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(4)]],\n    });\n\n  }\n\n  login(){\n    let auth = {\n      email:this.email,\n      password: this.password\n    }\n    this.authService.signIn(auth).subscribe((res:any)=>{\n      if (!res.status) alert(res.message)\n      else{\n        this.authService.id = res.id;\n        this.authService.name=res.name;\n       // this.router.navigate(['/chat'])\n       alert(res.message)\n      }\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
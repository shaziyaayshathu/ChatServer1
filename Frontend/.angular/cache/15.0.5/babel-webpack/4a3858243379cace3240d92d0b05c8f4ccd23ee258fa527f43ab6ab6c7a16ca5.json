{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//import 'rxjs/add/operator/map';\n//import {map} from 'rxjs'\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"http://localhost:3200/api\";\n    this.id = \"\";\n    this.name = \"\";\n  }\n  signUp(auth) {\n    return this.http.post(this.url + \"/register\", auth);\n  }\n  signIn(auth) {\n    return this.http.post(this.url + '/login', auth);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAEA;AACA;AAKA,OAAM,MAAOA,WAAW;EAItBC,YAAqBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAHzB,QAAG,GAAW,2BAA2B;IACzC,OAAE,GAAS,EAAE;IACb,SAAI,GAAS,EAAE;EACyB;EACxCC,MAAM,CAACC,IAAQ;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,GAAG,GAAC,WAAW,EAAEF,IAAI,CAAC;EAEnD;EACAG,MAAM,CAACH,IAAQ;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,GAAG,GAAG,QAAQ,EAAEF,IAAI,CAAC;EAElD;;AAZWJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAQ,SAAXR,WAAW;EAAAS,YAFV;AAAM","names":["AuthService","constructor","http","signUp","auth","post","url","signIn","factory","providedIn"],"sourceRoot":"","sources":["E:\\ChatServer\\Frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n//import 'rxjs/add/operator/map';\n//import {map} from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  url: string = \"http://localhost:3200/api\";\n  id: string=\"\";\n  name: string=\"\";\n  constructor( private http:HttpClient) { }\n  signUp(auth:any){\n    return this.http.post(this.url+\"/register\", auth);\n    \n  }\n  signIn(auth:any) {\n    return this.http.post(this.url + '/login', auth);\n      \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  // name :String=\"\";\n  // email :String =\"\";\n  // password :String=\"\";\n  // confirmPassword :String=\"\";\n  constructor(authService, router, formBuilder) {\n    this.authService = authService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      //controlname: ['initial value', rules]\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(4)]]\n    });\n  }\n  register() {\n    // if(this.name==''|| this.email==''|| this.password==''|| this.confirmPassword=='')\n    // alert(\"All fields are Mandatory\")\n    if (this.registerForm.get('password').value != this.registerForm.get('confirmPassword').value) {\n      alert(\"Password does not match !\");\n    } else {\n      // let auth = {\n      //   name:this.name,\n      //   email:this.email,\n      //   password: this.password\n      // }\n      this.authService.signUp(this.registerForm.value).subscribe(res => {\n        if (!res.status) alert(\"invalid E-mail address\");else {\n          this.router.navigate(['/login']);\n        }\n      });\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAGhD,SAAiCC,UAAU,QAAoB,gBAAgB;AAOxE,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5B;EACA;EACA;EACA;EAEAC,YAAmBC,WAAuB,EAAUC,MAAc,EAASC,WAAwB;IAAhF,gBAAW,GAAXF,WAAW;IAAsB,WAAM,GAANC,MAAM;IAAiB,gBAAW,GAAXC,WAAW;EAAmB;EAEzGC,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACzC;MACAC,IAAI,EAAE,CAAE,EAAE,EAAC,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACjCC,KAAK,EAAC,CAAC,EAAE,EAAC,CAACX,UAAU,CAACU,QAAQ,EAACV,UAAU,CAACY,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;MAChGC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,eAAe,EAAE,CAAC,EAAE,EAAE,CAACf,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,CAAC;KACrE,CAAC;EAEJ;EAEAE,QAAQ;IACN;IACA;IACA,IAAG,IAAI,CAACT,YAAY,CAACU,GAAG,CAAC,UAAU,CAAC,CAACC,KAAK,IAAG,IAAI,CAACX,YAAY,CAACU,GAAG,CAAC,iBAAiB,CAAC,CAACC,KAAK,EAC3F;MACEC,KAAK,CAAC,2BAA2B,CAAC;KACnC,MACG;MACJ;MACA;MACA;MACA;MACA;MACA,IAAI,CAAChB,WAAW,CAACiB,MAAM,CAAC,IAAI,CAACb,YAAY,CAACW,KAAK,CAAC,CAACG,SAAS,CAAEC,GAAO,IAAG;QACpE,IAAI,CAACA,GAAG,CAACC,MAAM,EAAEJ,KAAK,CAAC,wBAAwB,CAAC,MAC5C;UACF,IAAI,CAACf,MAAM,CAACoB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;MAEpC,CAAC,CAAC;;EAEN;CAEC;AA5CYvB,iBAAiB,eAL7BF,SAAS,CAAC;EACT0B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW1B,iBAAiB,CA4C7B;SA5CYA,iBAAiB","names":["Component","Validators","RegisterComponent","constructor","authService","router","formBuilder","ngOnInit","registerForm","group","name","required","email","pattern","password","minLength","confirmPassword","register","get","value","alert","signUp","subscribe","res","status","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\ChatServer\\Frontend\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["import { Component ,OnInit} from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators,FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm:FormGroup |any;\n  \n  // name :String=\"\";\n  // email :String =\"\";\n  // password :String=\"\";\n  // confirmPassword :String=\"\";\n\n  constructor(public authService:AuthService, private router: Router,private formBuilder: FormBuilder,) {  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      //controlname: ['initial value', rules]\n      name: [ '',[Validators.required]],\n      email:['',[Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(4)]],\n    });\n\n  }\n\n  register(){\n    // if(this.name==''|| this.email==''|| this.password==''|| this.confirmPassword=='')\n    // alert(\"All fields are Mandatory\")\n    if(this.registerForm.get('password').value!= this.registerForm.get('confirmPassword').value)\n    {\n      alert(\"Password does not match !\")\n    }\n    else{\n    // let auth = {\n    //   name:this.name,\n    //   email:this.email,\n    //   password: this.password\n    // }\n    this.authService.signUp(this.registerForm.value).subscribe((res:any)=>{\n      if (!res.status) alert(\"invalid E-mail address\")\n      else{\n        this.router.navigate(['/login'])\n      }\n    })\n  }\n}\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
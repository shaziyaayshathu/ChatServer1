{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_small_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 12);\n    i0.ɵɵtext(1, \"Please provide a valid email address >\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"/register\"];\n};\nexport class LoginComponent {\n  constructor(authService, router, formBuilder) {\n    this.authService = authService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      //controlname: ['initial value', rules]\n      email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n      password: ['', [Validators.required]]\n    });\n  }\n  login() {\n    // let auth = {\n    //   email:this.email,\n    //   password: this.password\n    // }\n    this.authService.signIn(this.loginForm.value).subscribe(res => {\n      if (!res.status) alert(res.message);else {\n        this.authService.id = res.id;\n        this.authService.name = res.name;\n        this.router.navigate(['/chat']);\n        //alert(res.message)\n      }\n    });\n  }\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 24,\n  vars: 7,\n  consts: [[1, \"container\", \"container-fluid\", \"col-xs-6\", \"col-xs-offset-3\"], [1, \"text-center\", \"page-header\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"inputEmail\", 1, \"sr-only\"], [\"id\", \"inputEmail\", \"formControlName\", \"email\", \"name\", \"email\", \"placeholder\", \"Email address\", \"required\", \"\", \"autofocus\", \"\", \"type\", \"email\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"inputPassword\", 1, \"sr-only\"], [\"id\", \"inputPassword\", \"formControlName\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", \"type\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"btn-block\", 3, \"disabled\"], [3, \"routerLink\"], [1, \"text-right\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Welcome to FriendsChat\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵtemplate(9, LoginComponent_small_9_Template, 2, 0, \"small\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"div\", 3)(17, \"button\", 9);\n      i0.ɵɵtext(18, \"Sign in\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \" \\u00A0Don't have an account?\");\n      i0.ɵɵelementStart(20, \"a\", 10);\n      i0.ɵɵtext(21, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(22, \"div\", 11)(23, \"br\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.loginForm.get(\"email\").invalid && ctx.loginForm.get(\"email\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").errors == null ? null : ctx.loginForm.get(\"email\").errors.pattern);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n    }\n  },\n  dependencies: [i4.NgIf, i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 840:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(8:5) E:\\\\\\\\ChatServer\\\\\\\\Frontend\\\\\\\\src\\\\\\\\app\\\\\\\\components\\\\\\\\login\\\\\\\\login.component.css Unknown word\\\\n\\\\n \\\\u001b[90m  6 | \\\\u001b[39m    margin-left\\\\u001b[33m:\\\\u001b[39m 35%\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m  7 | \\\\u001b[39m    padding\\\\u001b[33m:\\\\u001b[39m 15px\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m  8 | \\\\u001b[39m    height\\\\n \\\\u001b[90m    | \\\\u001b[39m    \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m  9 | \\\\u001b[39m  \\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 10 | \\\\u001b[39m  \\\\u001b[33m.page-header\\\\u001b[39m\\\\u001b[33m{\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[840]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=login.component.css.map*/\"]\n});","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAAoB,gBAAgB;;;;;;;;ICKzEC,iCAA0E;IAAAA,sDAAsC;IAAAA,iBAAQ;;;;;;ADE9H,OAAM,MAAOC,cAAc;EAMzBC,YAAmBC,WAAuB,EAAUC,MAAc,EAASC,WAAwB;IAAhF,gBAAW,GAAXF,WAAW;IAAsB,WAAM,GAANC,MAAM;IAAiB,gBAAW,GAAXC,WAAW;EAAiB;EAEvGC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACtC;MAEAC,KAAK,EAAC,CAAC,EAAE,EAAC,CAACV,UAAU,CAACW,QAAQ,EAACX,UAAU,CAACY,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;MAChGC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACW,QAAQ,CAAC;KAErC,CAAC;EAEJ;EAEAG,KAAK;IACH;IACA;IACA;IACA;IACA,IAAI,CAACV,WAAW,CAACW,MAAM,CAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAAC,CAACC,SAAS,CAAEC,GAAO,IAAG;MACjE,IAAI,CAACA,GAAG,CAACC,MAAM,EAAEC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC,MAC/B;QACF,IAAI,CAACjB,WAAW,CAACkB,EAAE,GAAGJ,GAAG,CAACI,EAAE;QAC5B,IAAI,CAAClB,WAAW,CAACmB,IAAI,GAACL,GAAG,CAACK,IAAI;QAC9B,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAChC;;IAEH,CAAC,CAAC;EACJ;;;AAjCWtB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3B5B,8BAAgE;MAE5BA,sCAAsB;MAAAA,iBAAK;MAC/DA,+BAAmD;MAArBA;QAAA,OAAY6B,WAAO;MAAA,EAAC;MAChD7B,qBAAI;MACFA,8BAAwB;MACkBA,6BAAa;MAAAA,iBAAQ;MAC7DA,2BAAwO;MACxOA,mEAAwH;MAC1HA,iBAAM;MACRA,sBAAI;MACFA,+BAAwB;MACqBA,yBAAQ;MAAAA,iBAAQ;MAC3DA,4BAA6I;MAC/IA,iBAAM;MACRA,sBAAI;MAEFA,+BAAwB;MACwEA,wBAAO;MAAAA,iBAAS;MAC9GA,8CAA4B;MAAAA,8BAAgC;MAAAA,yBAAQ;MAAAA,iBAAI;MAG1EA,2BAEM;MAERA,iBAAO;;;MAvBHA,eAAuB;MAAvBA,yCAAuB;MAIhBA,eAAuF;MAAvFA,sGAAuF;MACtFA,eAA4C;MAA5CA,mHAA4C;MAU5CA,eAA8B;MAA9BA,gDAA8B;MACPA,eAA4B;MAA5BA,uDAA4B","names":["Validators","i0","LoginComponent","constructor","authService","router","formBuilder","ngOnInit","loginForm","group","email","required","pattern","password","login","signIn","value","subscribe","res","status","alert","message","id","name","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\ChatServer\\Frontend\\src\\app\\components\\login\\login.component.ts","E:\\ChatServer\\Frontend\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators,FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // email :string=\"\";\n  // password :string=\"\";\n  loginForm:FormGroup |any\n\n  constructor(public authService:AuthService, private router: Router,private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      //controlname: ['initial value', rules]\n      \n      email:['',[Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n      password: ['', [Validators.required]]\n     \n    });\n\n  }\n\n  login(){\n    // let auth = {\n    //   email:this.email,\n    //   password: this.password\n    // }\n    this.authService.signIn(this.loginForm.value).subscribe((res:any)=>{\n      if (!res.status) alert(res.message)\n      else{\n        this.authService.id = res.id;\n        this.authService.name=res.name;\n        this.router.navigate(['/chat'])\n       //alert(res.message)\n      }\n    });\n  }\n\n}\n","<div class=\"container container-fluid col-xs-6 col-xs-offset-3\">\n\n<h2 class=\"text-center page-header\">Welcome to FriendsChat</h2>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n  <br>\n    <div class=\"form-group\">\n      <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n      <input [class.is-invalid] = \"loginForm.get('email').invalid && loginForm.get('email').touched\" id=\"inputEmail\" formControlName=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Email address\" required autofocus=\"\" type=\"email\">\n      <small *ngIf=\"loginForm.get('email').errors?.pattern\" class=\"text-danger\">Please provide a valid email address ></small>\n    </div>\n  <br>\n    <div class=\"form-group\">\n      <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n      <input id=\"inputPassword\" formControlName=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required=\"\" type=\"password\">\n    </div>\n  <br>\n  \n    <div class=\"form-group\">\n      <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n      &nbsp;Don't have an account?<a [routerLink]=\"['/register']\">Register</a>\n    </div>\n  \n    <div class=\"text-right\">\n        \n    </div>\n    <br>\n  </form>\n  </div>\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}